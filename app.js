import { Student } from "./student.js";
import { createStudentArray } from "./arrayCreator.js";
import { Renderer } from "./renderer.js";

disableDarkModeByDefault()

//read data

//modify data + display
let tbody = document.querySelector('tbody')
let students = await createStudentArray()
let renderer = new Renderer()

render()
getStats()
// -------------------------------------------
//              CRUD functions
//--------------------------------------------

document.querySelector('#add-new-student-btn').addEventListener('click', addNewStudent)
document.querySelector('#add-new-student-btn').addEventListener('click', clearFields)

function addNewStudent(){
    
    let stud = new Student(
        '', // ID will be generated by backend
        document.querySelector('#input-name').value,
        document.querySelector('#input-isActive').value === 'true',
        document.querySelector('#input-birthYear').value,
        document.querySelector('#input-connections').value,
        document.querySelector('#input-completedCredits').value,
        document.querySelector('#input-activeSemesterCount').value,
        document.querySelector('#input-image').value
    )
    
    //console.log(stud);

    fetch('https://practiceapi.nikprog.hu/Student', {
        method: 'POST',
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(stud)
    })
    .then(response => response.json())
    .then(data => {
        //console.log('Success: ', data)

        // add response data to the student array
        students.push(new Student(
            data.id, 
            data.name,
            data.isActive, 
            data.birthYear, 
            data.connections, 
            data.completedCredits, 
            data.activeSemesterCount, 
            data.image
            ))
        render()
    })
    .catch(error => {
        console.log('Error: ', error);
    });
}

function deleteStudent(e){
    let idToDelete = e.target.dataset.studId

    fetch('https://practiceapi.nikprog.hu/Student/'+idToDelete, {
        method: 'DELETE',
    })
    .then(response => response.json())
    .then(data => {
        //console.log('Success', data)

        // remove from students array
        let index = students.findIndex(x => x.id === idToDelete)
        students.splice(index, 1)

        // re-render table
        render()
    })
}

// ---------------------------------------------------------------------------------------
//              Filter functions TODO shadow arrays for restoring
//----------------------------------------------------------------------------------------

document.querySelector('#filter-for-active-btn').addEventListener('click', filterForActive)
document.querySelector('#filter-for-inactive-btn').addEventListener('click', filterForInactive)

function filterForActive(){
    students = students.filter(x => x.isActive)
    render()
}

function filterForInactive(){
    students = students.filter(x => !x.isActive)
    render()
}


// -------------------------------------------
//                   Stats
//--------------------------------------------

function getStats(){
    let sumConnections = students.reduce((sum, item) => sum + item.connections, 0)
    let avgSemesterCount = (students.reduce((sum, item) => sum + item.activeSemesterCount, 0)) / students.length

    let p1 = document.createElement('p')
    p1.innerHTML = 'SUM connections: ' + sumConnections
    
    let p2 = document.createElement('p')
    p2.innerHTML = 'AVG semester count: ' + avgSemesterCount

    document.querySelector('#stats').appendChild(p1)
    document.querySelector('#stats').appendChild(p2)
}

// -------------------------------------------
//        Sorting and other functions
//--------------------------------------------

document.querySelector('#sort-by-age-btn').addEventListener('click', sortBy)
document.querySelector('#sort-by-active-btn').addEventListener('click', sortBy)
document.querySelector('#sort-by-name-btn').addEventListener('click', sortBy)

function sortBy(param){
    let sortByValue = param.target.dataset.param

    if(sortByValue === 'birthYear' || sortByValue === 'isActive')
        // number
        students.sort((a,b) => {return a[sortByValue] - b[sortByValue]})
    else if (sortByValue === 'name')
        // string
        students.sort((a,b) => {return a[sortByValue].localeCompare(b[sortByValue])})

    render()
}

function clearFields(){
    document.querySelector('#input-name').value = '',
        document.querySelector('#input-isActive').value ='',
        document.querySelector('#input-birthYear').value = '',
        document.querySelector('#input-connections').value = '',
        document.querySelector('#input-completedCredits').value = '',
        document.querySelector('#input-activeSemesterCount').value = '',
        document.querySelector('#input-image').value = ''
}

// -------------------------------------------
//                  Render
//--------------------------------------------

function render(){
    tbody.innerHTML = renderer.renderTable(students)
    document.querySelectorAll('.delete-student-btn').forEach(x => {
        x.addEventListener('click', deleteStudent)
    })
}

// -------------------------------------------
//               CSS handlers
//--------------------------------------------

function disableDarkModeByDefault(){
    document.styleSheets[1].disabled = true
}

document.querySelector('#flexSwitchCheckDefault').addEventListener('click', switchMode)

function switchMode(){
    document.styleSheets[1].disabled = !document.styleSheets[1].disabled
}